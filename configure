#!/bin/sh

# Auto-generated by Easy Config 0.0.1

Makefile() {
  if [ -z "$cc" ] ; then
    cc=$CC
  fi
  if [ -z "$cxx" ] ; then
    cxx=$CXX
  fi
cat << EOF > Makefile
# This Makefile automatically generated by configure.

CC =		$cc
CFLAGS =	$cflags

CXX =		$cxx
CXXFLAGS =	$cxxflags

EOF

if [ ! -z "$cppflags" ] ; then
cat << EOF >> Makefile
CPPFLAGS =	$cppflags
EOF
fi

if [ ! -z "$ldflags" ] ; then
cat << EOF >> Makefile
LDFLAGS =	$ldflags
EOF
fi

cat << EOF >> Makefile

PREFIX =	$prefix
BINDIR =	$bindir
MANDIR =	$mandir

PROG =	$prog
OBJS !=	$objs

all: \${PROG}

\${PROG}: \${OBJS}
	\${CC} \${LDFLAGS} -o \${PROG} \${OBJS} $libs

install:
	install -d \${DESTDIR}\${BINDIR}
	install -c -s -m 755 \${PROG} \${DESTDIR}\${BINDIR}

test:
	echo "No tests"

clean:
	rm -f \${PROG} \${OBJS}

distclean: clean
	rm -f Makefile config.h
EOF
}

prog="easyconfig"
objs="ls *.c | sed 's/\.c/.o/'"

cccheck() {
  if [ ! -z "$CC" ] ; then
cat << EOF > conftest.c
int main(void){return 0;}
EOF
    $CC $cflags -o conftest.o -c conftest.c > /dev/null 2>&1
    $CC $ldflags -o conftest conftest.o > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
        rm -f conftest conftest.o conftest.c
        cc="$CC"
        return 0
      else
        echo "could not build working executables"
        echo "Please ensure your C compiler is a native compiler"
        exit 1
      fi
    else
      rm -f conftest conftest.o conftest.c
    fi
  fi

  for compiler in cc clang gcc ; do
cat << EOF > conftest.c
int main(void){return 0;}
EOF

    $compiler $cflags -o conftest.o -c conftest.c > /dev/null 2>&1
    $compiler $ldflags -o conftest conftest.o > /dev/null 2>&1

    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
        rm -f conftest conftest.o conftest.c
        cc="$compiler"
        return 0
      else
        echo "could not build working executables"
        echo "Please ensure your C compiler is a native compiler"
        exit 1
      fi
    else
      rm -f conftest conftest.o conftest.c
    fi
  done

  return 1
}

printf "checking for C compiler... "
cccheck
if [ $? -ne 0 ] ; then
  echo "not found"
  echo "Please install a C compiler and re-run configure."
  exit 1
else
  echo "$cc"
fi

cxxcheck() {
  if [ ! -z "$CXX" ] ; then
cat << EOF > conftest.c
int main(void){return 0;}
EOF
    $CXX $cxxflags -o conftest.o -c conftest.c > /dev/null 2>&1
    $CXX $ldflags -o conftest conftest.o > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
        rm -f conftest conftest.o conftest.c
        cxx="$CXX"
        return 0
      else
        echo "could not build working executables"
        echo "Please ensure your C++ compiler is a native compiler"
        exit 1
      fi
    else
      rm -f conftest conftest.o conftest.c
    fi
  fi

  for compiler in c++ clang++ g++ ; do
cat << EOF > conftest.c
int main(void){return 0;}
EOF

    $compiler $cflags -o conftest.o -c conftest.c > /dev/null 2>&1
    $compiler $ldflags -o conftest conftest.o > /dev/null 2>&1

    if [ $? -eq 0 ] ; then
      ./conftest
      if [ $? -eq 0 ] ; then
        rm -f conftest conftest.o conftest.c
        cxx="$compiler"
        return 0
      else
        echo "could not build working executables"
        echo "Please ensure your C++ compiler is a native compiler"
        exit 1
      fi
    else
      rm -f conftest conftest.o conftest.c
    fi
  done

  return 1
}

printf "checking for C++ compiler... "
cxxcheck
if [ $? -ne 0 ] ; then
  echo "not found"
  echo "Please install a C++ compiler and re-run configure."
  exit 1
else
  echo "$cxx"
fi

cflags="-g -O2 `dialog-config --cflags`"
cxxflags="-g -O2"
cppflags=""
ldflags=""
libs="`dialog-config --libs` -lintl"
printf "creating Makefile... "
Makefile
echo "done"
